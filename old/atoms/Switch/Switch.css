:where(.switch) {
  --switch-height: var(--icon-size, 1.5rem);
  --switch-track-padding: 0.125rem;
  --switch-track-length: calc(var(--switch-thumb-size) * 2);
  --switch-thumb-size: calc(var(--switch-height) - var(--switch-track-padding) * 2);
  --switch-track-inactive: var(--input-inactive);
  --switch-track-active: var(--input-active);
  --switch-thumb-color: var(--background);
  --switch-border-radius: var(--switch-track-length);
  --switch-icon: none;
  --thumb-position: 0%;
  --thumb-transition-duration: 0.25s;
  --track-color: var(--switch-track-inactive);

  display: grid;
  flex-shrink: 0;
  grid: [track] 1fr / [track] 1fr;
  align-items: center;
  margin: 0;
  padding: var(--switch-track-padding);
  border-radius: var(--switch-border-radius);
  background: var(--track-color);
  cursor: pointer;
  user-select: none;
  transition: background-color var(--thumb-transition-duration) var(--ease-standard);
  inline-size: var(--switch-track-length);
  block-size: var(--switch-track-height);
  -webkit-tap-highlight-color: transparent;
  appearance: none;
  touch-action: pan-y;

  @media (prefers-reduced-motion: reduce) {
    --thumb-transition-duration: 0s;
  }

  &::before {
    content: "";
    grid-area: track;
    width: var(--switch-thumb-size);
    height: var(--switch-thumb-size);
    border-radius: calc(var(--switch-border-radius) - var(--switch-track-padding));
    background: var(--switch-thumb-color) var(--switch-icon) no-repeat center;
    background-size: calc(var(--switch-thumb-size) * 0.75);
    outline: 0 solid var(--focus);
    transition: transform var(--thumb-transition-duration) var(--ease-standard),
      outline-width var(--timing-slow) var(--ease-squish-5);
    transform: translateX(var(--thumb-position));
  }

  &:where(:checked) {
    --thumb-position: calc(
      (var(--switch-track-length) - var(--switch-track-padding) * 2 - 100%) * var(--ltr)
    );
    --track-color: var(--switch-track-active);
  }

  &:where(:indeterminate) {
    --thumb-position: calc(
      (
        ((var(--switch-track-length) - var(--switch-track-padding) * 2) / 2) -
        (var(--switch-thumb-size) / 2)
      ) * var(--ltr)
    );
  }

  &:where([data-orientation="vertical"]) {
    transform: rotate(calc(90deg * var(--ltr) * -1));

    &::before {
      transform: translateX(var(--thumb-position)) rotate(calc(90deg * var(--ltr)));
    }
  }

  &:where(:focus-visible, :hover, :active) {
    outline: none;

    &::before {
      outline-width: 0.5rem;
    }
  }

  &:where(:disabled, [aria-disabled="true"]) {
    opacity: var(--disabled-opacity);
    cursor: not-allowed;

    &::before {
      background: transparent;
      box-shadow: inset 0 0 0 2px var(--switch-thumb-color);
      outline-width: 0;
    }
  }

  &:where(.skeleton)::before {
    opacity: 0;
  }
}
