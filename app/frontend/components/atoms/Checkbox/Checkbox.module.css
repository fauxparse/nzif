
.root {
  --checkbox-indicator-size: calc(9px * var(--scaling));
  --checkbox-border-radius: calc(var(--radius-1) * 0.875);
  --skeleton-height-override: var(--checkbox-size);
  --skeleton-radius-override: var(--checkbox-border-radius);

  position: relative;
  display: inline-flex;
  vertical-align: top;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;

  /* Unless in a skeleton, align with text line height when possible and fall back to own height */
  height: var(--skeleton-height, var(--line-height, var(--checkbox-size)));
  padding: 0;
  border: 0;

  /* Set root radius when in a skeleton */
  border-radius: var(--skeleton-radius);
  background-color: transparent;
  cursor: var(--cursor-checkbox);
  aspect-ratio: 1;

  &[data-size="1"] {
    --checkbox-size: calc(var(--space-4) * 0.875);
    --checkbox-indicator-size: calc(9px * var(--scaling));
    --checkbox-border-radius: calc(var(--radius-1) * 0.875);
  }

  &[data-size="2"] {
    --checkbox-size: var(--space-4);
    --checkbox-indicator-size: calc(10px * var(--scaling));
    --checkbox-border-radius: var(--radius-1);
  }

  &[data-size="3"] {
    --checkbox-size: calc(var(--space-4) * 1.25);
    --checkbox-indicator-size: calc(12px * var(--scaling));
    --checkbox-border-radius: calc(var(--radius-1) * 1.25);
  }

  &::before {
    content: '';
    display: block;
    width: var(--checkbox-size);
    height: var(--checkbox-size);
    border-radius: var(--checkbox-border-radius);
  }

  &:where([data-state='checked']) {
    .icon {
      path:nth-of-type(1) {
        transition: stroke-dashoffset 0.2s ease-out;
        stroke-dashoffset: 0;
      }
    }
  }

  &:where([data-state='indeterminate']) {
    .icon {
      path:nth-of-type(2) {
        transition: stroke-dashoffset 0.2s ease-out;
        stroke-dashoffset: 0;
      }
    }
  }

  &[data-variant="surface"] {
    &::before {
      background-color: var(--accent-indicator);
    }

    & :where(.icon) {
      color: var(--accent-contrast);
    }

    &:where([data-state='unchecked']) {
      &::before {
        background-color: var(--color-surface);
        box-shadow: inset 0 0 0 1px var(--gray-a7);
      }
    }

    &:where(:disabled) {
      &::before {
        background-color: transparent;
        box-shadow: inset 0 0 0 1px var(--gray-a6);
      }

      & :where(.icon) {
        color: var(--gray-a8);
      }
    }
  }

  &[data-variant="soft"] {
    &::before {
      background-color: var(--accent-a5);
    }

    & :where(.icon) {
      color: var(--accent-a11);
    }

    &:where(:disabled) {
      &::before {
        background-color: transparent;
      }

      & :where(.icon) {
        color: var(--gray-a8);
      }
    }
  }
}

.icon {
  path {
    stroke-dasharray: 1;
    stroke-dashoffset: -1;
  }
};
