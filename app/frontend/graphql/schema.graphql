"""
An activity that may be scheduled during the Festival
"""
interface Activity {
  """
  Unique ID
  """
  id: ID!

  """
  Activity name
  """
  name: String!

  """
  For use in URL generation
  """
  slug: String!
}

"""
The state of a festival
"""
enum ActivityType {
  """
  Show
  """
  show

  """
  Workshop
  """
  workshop
}

"""
A festival
"""
type Festival {
  """
  Activities (including unscheduled ones)
  """
  activities(
    """
    Activity type
    """
    type: ActivityType
  ): [Activity!]!

  """
  Retrieve an activity by its type and slug
  """
  activity(
    """
    URL segment
    """
    slug: String!

    """
    Activity type
    """
    type: ActivityType!
  ): Activity

  """
  The last day of the festival
  """
  endDate: ISODate!

  """
  Year of the festival
  """
  id: ID!

  """
  The first day of the festival
  """
  startDate: ISODate!

  """
  State of the festival
  """
  state: FestivalState!
}

"""
The state of a festival
"""
enum FestivalState {
  """
  In the past
  """
  finished

  """
  Happening right now
  """
  happening

  """
  In the future
  """
  upcoming
}

"""
A date in ISO8601 format
"""
scalar ISODate

"""
Top-level mutation interface
"""
type Mutation {
  """
  An example field added by the generator
  """
  testField: String!
}

"""
Top-level query interface
"""
type Query {
  """
  Find a festival by year
  """
  festival(
    """
    The year of the festival
    """
    year: String!
  ): Festival!
}

"""
A show
"""
type Show implements Activity {
  """
  Unique ID
  """
  id: ID!

  """
  Activity name
  """
  name: String!

  """
  For use in URL generation
  """
  slug: String!
}

"""
A workshop
"""
type Workshop implements Activity {
  """
  Unique ID
  """
  id: ID!

  """
  Activity name
  """
  name: String!

  """
  For use in URL generation
  """
  slug: String!
}
