/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthImport } from './routes/_auth'
import { Route as PublicIndexImport } from './routes/_public.index'
import { Route as PublicAuthenticatedImport } from './routes/_public/_authenticated'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as PublicActivityTypeRouteImport } from './routes/_public/$activityType/route'
import { Route as PublicAuthenticatedProfileImport } from './routes/_public/_authenticated/profile'
import { Route as PublicActivityTypeListImport } from './routes/_public/$activityType/_list'
import { Route as PublicActivityTypeSlugImport } from './routes/_public/$activityType/$slug'
import { Route as PublicActivityTypeListIndexImport } from './routes/_public/$activityType/_list.index'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAuthenticatedRoute = PublicAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => PublicRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const PublicActivityTypeRouteRoute = PublicActivityTypeRouteImport.update({
  path: '/$activityType',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAuthenticatedProfileRoute = PublicAuthenticatedProfileImport.update(
  {
    path: '/profile',
    getParentRoute: () => PublicAuthenticatedRoute,
  } as any,
)

const PublicActivityTypeListRoute = PublicActivityTypeListImport.update({
  id: '/_list',
  getParentRoute: () => PublicActivityTypeRouteRoute,
} as any)

const PublicActivityTypeSlugRoute = PublicActivityTypeSlugImport.update({
  path: '/$slug',
  getParentRoute: () => PublicActivityTypeRouteRoute,
} as any)

const PublicActivityTypeListIndexRoute =
  PublicActivityTypeListIndexImport.update({
    path: '/',
    getParentRoute: () => PublicActivityTypeListRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_public/$activityType': {
      preLoaderRoute: typeof PublicActivityTypeRouteImport
      parentRoute: typeof PublicImport
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_public/_authenticated': {
      preLoaderRoute: typeof PublicAuthenticatedImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/_public/$activityType/$slug': {
      preLoaderRoute: typeof PublicActivityTypeSlugImport
      parentRoute: typeof PublicActivityTypeRouteImport
    }
    '/_public/$activityType/_list': {
      preLoaderRoute: typeof PublicActivityTypeListImport
      parentRoute: typeof PublicActivityTypeRouteImport
    }
    '/_public/_authenticated/profile': {
      preLoaderRoute: typeof PublicAuthenticatedProfileImport
      parentRoute: typeof PublicAuthenticatedImport
    }
    '/_public/$activityType/_list/': {
      preLoaderRoute: typeof PublicActivityTypeListIndexImport
      parentRoute: typeof PublicActivityTypeListImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthRoute.addChildren([AuthLoginRoute, AuthSignupRoute]),
  PublicRoute.addChildren([
    PublicActivityTypeRouteRoute.addChildren([
      PublicActivityTypeSlugRoute,
      PublicActivityTypeListRoute.addChildren([
        PublicActivityTypeListIndexRoute,
      ]),
    ]),
    PublicAuthenticatedRoute.addChildren([PublicAuthenticatedProfileRoute]),
    PublicIndexRoute,
  ]),
  LogoutRoute,
])

/* prettier-ignore-end */
