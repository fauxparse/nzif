/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as AdminImport } from './routes/admin'
import { Route as PublicImport } from './routes/_public'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PublicIndexImport } from './routes/_public.index'
import { Route as PublicAuthenticatedImport } from './routes/_public/_authenticated'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AdminActivityTypeRouteImport } from './routes/admin/$activityType/route'
import { Route as PublicActivityTypeRouteImport } from './routes/_public/$activityType/route'
import { Route as AdminActivityTypeIndexImport } from './routes/admin/$activityType/index'
import { Route as PublicAboutSlugImport } from './routes/_public/about.$slug'
import { Route as PublicAuthenticatedProfileImport } from './routes/_public/_authenticated/profile'
import { Route as PublicActivityTypeListImport } from './routes/_public/$activityType/_list'
import { Route as PublicActivityTypeSlugImport } from './routes/_public/$activityType/$slug'
import { Route as AdminActivityTypeSlugRouteImport } from './routes/admin/$activityType/$slug/route'
import { Route as AdminActivityTypeSlugIndexImport } from './routes/admin/$activityType/$slug/index'
import { Route as PublicActivityTypeListIndexImport } from './routes/_public/$activityType/_list.index'
import { Route as AdminActivityTypeSlugSessionImport } from './routes/admin/$activityType/$slug/$session'

// Create Virtual Routes

const AdminTimetableLazyImport = createFileRoute('/admin/timetable')()

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const PublicIndexRoute = PublicIndexImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any)

const AdminTimetableLazyRoute = AdminTimetableLazyImport.update({
  path: '/timetable',
  getParentRoute: () => AdminRoute,
} as any).lazy(() =>
  import('./routes/admin/timetable.lazy').then((d) => d.Route),
)

const PublicAuthenticatedRoute = PublicAuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => PublicRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AdminActivityTypeRouteRoute = AdminActivityTypeRouteImport.update({
  path: '/$activityType',
  getParentRoute: () => AdminRoute,
} as any)

const PublicActivityTypeRouteRoute = PublicActivityTypeRouteImport.update({
  path: '/$activityType',
  getParentRoute: () => PublicRoute,
} as any)

const AdminActivityTypeIndexRoute = AdminActivityTypeIndexImport.update({
  path: '/',
  getParentRoute: () => AdminActivityTypeRouteRoute,
} as any)

const PublicAboutSlugRoute = PublicAboutSlugImport.update({
  path: '/about/$slug',
  getParentRoute: () => PublicRoute,
} as any)

const PublicAuthenticatedProfileRoute = PublicAuthenticatedProfileImport.update(
  {
    path: '/profile',
    getParentRoute: () => PublicAuthenticatedRoute,
  } as any,
)

const PublicActivityTypeListRoute = PublicActivityTypeListImport.update({
  id: '/_list',
  getParentRoute: () => PublicActivityTypeRouteRoute,
} as any)

const PublicActivityTypeSlugRoute = PublicActivityTypeSlugImport.update({
  path: '/$slug',
  getParentRoute: () => PublicActivityTypeRouteRoute,
} as any)

const AdminActivityTypeSlugRouteRoute = AdminActivityTypeSlugRouteImport.update(
  {
    path: '/$slug',
    getParentRoute: () => AdminActivityTypeRouteRoute,
  } as any,
)

const AdminActivityTypeSlugIndexRoute = AdminActivityTypeSlugIndexImport.update(
  {
    path: '/',
    getParentRoute: () => AdminActivityTypeSlugRouteRoute,
  } as any,
)

const PublicActivityTypeListIndexRoute =
  PublicActivityTypeListIndexImport.update({
    path: '/',
    getParentRoute: () => PublicActivityTypeListRoute,
  } as any)

const AdminActivityTypeSlugSessionRoute =
  AdminActivityTypeSlugSessionImport.update({
    path: '/$session',
    getParentRoute: () => AdminActivityTypeSlugRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_public/$activityType': {
      id: '/_public/$activityType'
      path: '/$activityType'
      fullPath: '/$activityType'
      preLoaderRoute: typeof PublicActivityTypeRouteImport
      parentRoute: typeof PublicImport
    }
    '/admin/$activityType': {
      id: '/admin/$activityType'
      path: '/$activityType'
      fullPath: '/admin/$activityType'
      preLoaderRoute: typeof AdminActivityTypeRouteImport
      parentRoute: typeof AdminImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthImport
    }
    '/_public/_authenticated': {
      id: '/_public/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicAuthenticatedImport
      parentRoute: typeof PublicImport
    }
    '/admin/timetable': {
      id: '/admin/timetable'
      path: '/timetable'
      fullPath: '/admin/timetable'
      preLoaderRoute: typeof AdminTimetableLazyImport
      parentRoute: typeof AdminImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexImport
      parentRoute: typeof PublicImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/admin/$activityType/$slug': {
      id: '/admin/$activityType/$slug'
      path: '/$slug'
      fullPath: '/admin/$activityType/$slug'
      preLoaderRoute: typeof AdminActivityTypeSlugRouteImport
      parentRoute: typeof AdminActivityTypeRouteImport
    }
    '/_public/$activityType/$slug': {
      id: '/_public/$activityType/$slug'
      path: '/$slug'
      fullPath: '/$activityType/$slug'
      preLoaderRoute: typeof PublicActivityTypeSlugImport
      parentRoute: typeof PublicActivityTypeRouteImport
    }
    '/_public/$activityType/_list': {
      id: '/_public/$activityType/_list'
      path: ''
      fullPath: '/$activityType'
      preLoaderRoute: typeof PublicActivityTypeListImport
      parentRoute: typeof PublicActivityTypeRouteImport
    }
    '/_public/_authenticated/profile': {
      id: '/_public/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof PublicAuthenticatedProfileImport
      parentRoute: typeof PublicAuthenticatedImport
    }
    '/_public/about/$slug': {
      id: '/_public/about/$slug'
      path: '/about/$slug'
      fullPath: '/about/$slug'
      preLoaderRoute: typeof PublicAboutSlugImport
      parentRoute: typeof PublicImport
    }
    '/admin/$activityType/': {
      id: '/admin/$activityType/'
      path: '/'
      fullPath: '/admin/$activityType/'
      preLoaderRoute: typeof AdminActivityTypeIndexImport
      parentRoute: typeof AdminActivityTypeRouteImport
    }
    '/admin/$activityType/$slug/$session': {
      id: '/admin/$activityType/$slug/$session'
      path: '/$session'
      fullPath: '/admin/$activityType/$slug/$session'
      preLoaderRoute: typeof AdminActivityTypeSlugSessionImport
      parentRoute: typeof AdminActivityTypeSlugRouteImport
    }
    '/_public/$activityType/_list/': {
      id: '/_public/$activityType/_list/'
      path: '/'
      fullPath: '/$activityType/'
      preLoaderRoute: typeof PublicActivityTypeListIndexImport
      parentRoute: typeof PublicActivityTypeListImport
    }
    '/admin/$activityType/$slug/': {
      id: '/admin/$activityType/$slug/'
      path: '/'
      fullPath: '/admin/$activityType/$slug/'
      preLoaderRoute: typeof AdminActivityTypeSlugIndexImport
      parentRoute: typeof AdminActivityTypeSlugRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({ AuthLoginRoute, AuthSignupRoute }),
  PublicRoute: PublicRoute.addChildren({
    PublicActivityTypeRouteRoute: PublicActivityTypeRouteRoute.addChildren({
      PublicActivityTypeSlugRoute,
      PublicActivityTypeListRoute: PublicActivityTypeListRoute.addChildren({
        PublicActivityTypeListIndexRoute,
      }),
    }),
    PublicAuthenticatedRoute: PublicAuthenticatedRoute.addChildren({
      PublicAuthenticatedProfileRoute,
    }),
    PublicIndexRoute,
    PublicAboutSlugRoute,
  }),
  AdminRoute: AdminRoute.addChildren({
    AdminActivityTypeRouteRoute: AdminActivityTypeRouteRoute.addChildren({
      AdminActivityTypeSlugRouteRoute:
        AdminActivityTypeSlugRouteRoute.addChildren({
          AdminActivityTypeSlugSessionRoute,
          AdminActivityTypeSlugIndexRoute,
        }),
      AdminActivityTypeIndexRoute,
    }),
    AdminTimetableLazyRoute,
    AdminIndexRoute,
  }),
  LogoutRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_public",
        "/admin",
        "/logout"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/$activityType",
        "/_public/_authenticated",
        "/_public/",
        "/_public/about/$slug"
      ]
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/$activityType",
        "/admin/timetable",
        "/admin/"
      ]
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_public/$activityType": {
      "filePath": "_public/$activityType/route.tsx",
      "parent": "/_public",
      "children": [
        "/_public/$activityType/$slug",
        "/_public/$activityType/_list"
      ]
    },
    "/admin/$activityType": {
      "filePath": "admin/$activityType/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/$activityType/$slug",
        "/admin/$activityType/"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_public/_authenticated": {
      "filePath": "_public/_authenticated.tsx",
      "parent": "/_public",
      "children": [
        "/_public/_authenticated/profile"
      ]
    },
    "/admin/timetable": {
      "filePath": "admin/timetable.lazy.tsx",
      "parent": "/admin"
    },
    "/_public/": {
      "filePath": "_public.index.tsx",
      "parent": "/_public"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/admin/$activityType/$slug": {
      "filePath": "admin/$activityType/$slug/route.tsx",
      "parent": "/admin/$activityType",
      "children": [
        "/admin/$activityType/$slug/$session",
        "/admin/$activityType/$slug/"
      ]
    },
    "/_public/$activityType/$slug": {
      "filePath": "_public/$activityType/$slug.tsx",
      "parent": "/_public/$activityType"
    },
    "/_public/$activityType/_list": {
      "filePath": "_public/$activityType/_list.tsx",
      "parent": "/_public/$activityType",
      "children": [
        "/_public/$activityType/_list/"
      ]
    },
    "/_public/_authenticated/profile": {
      "filePath": "_public/_authenticated/profile.tsx",
      "parent": "/_public/_authenticated"
    },
    "/_public/about/$slug": {
      "filePath": "_public/about.$slug.tsx",
      "parent": "/_public"
    },
    "/admin/$activityType/": {
      "filePath": "admin/$activityType/index.tsx",
      "parent": "/admin/$activityType"
    },
    "/admin/$activityType/$slug/$session": {
      "filePath": "admin/$activityType/$slug/$session.tsx",
      "parent": "/admin/$activityType/$slug"
    },
    "/_public/$activityType/_list/": {
      "filePath": "_public/$activityType/_list.index.tsx",
      "parent": "/_public/$activityType/_list"
    },
    "/admin/$activityType/$slug/": {
      "filePath": "admin/$activityType/$slug/index.tsx",
      "parent": "/admin/$activityType/$slug"
    }
  }
}
ROUTE_MANIFEST_END */
